.class public WorkingFile3
.super java/lang/Object

.method public <init>()V
	.limit stack 5
	.limit locals 1
	aload_0
	invokespecial java/lang/Object/<init>()V
	return
.end method

.method public static main([Ljava/lang/String;)V
	.limit stack 5
	.limit locals 1

	aload 0

	new WorkingFile3
	dup
	invokespecial WorkingFile3/<init>()V
	invokespecial WorkingFile3/startpunt()V

	return
.end method

.method public startpunt()V
	.limit stack 17
	.limit locals 3

	getstatic java/lang/System/out Ljava/io/PrintStream;
	ldc "Geef twee hele getallen"
	invokevirtual java/io/PrintStream/println(Ljava/lang/String;)V
	iconst_0
	istore 1
	iload 1
	new java/util/Scanner
	dup
	getstatic java/lang/System/in Ljava/io/InputStream;
	invokespecial java/util/Scanner/<init>(Ljava/io/InputStream;)V
	invokevirtual java/util/Scanner/nextInt()I
	istore 1
	iconst_0
	istore 2
	iload 2
	new java/util/Scanner
	dup
	getstatic java/lang/System/in Ljava/io/InputStream;
	invokespecial java/util/Scanner/<init>(Ljava/io/InputStream;)V
	invokevirtual java/util/Scanner/nextInt()I
	istore 2
	alsstate_1:
	iload 1
	iload 2
	if_icmpge alsstate_2
	getstatic java/lang/System/out Ljava/io/PrintStream;
	ldc "getal 1 is kleiner dan getal 2"
	invokevirtual java/io/PrintStream/println(Ljava/lang/String;)V
	goto als_1_end
	alsstate_2:
	iload 1
	iload 2
	if_icmpne alsstate_3
	getstatic java/lang/System/out Ljava/io/PrintStream;
	ldc "getal 1 is gelijk aangetal 2"
	invokevirtual java/io/PrintStream/println(Ljava/lang/String;)V
	goto als_1_end
	alsstate_3:
	getstatic java/lang/System/out Ljava/io/PrintStream;
	ldc "getal 1 is groter dan getal 2"
	invokevirtual java/io/PrintStream/println(Ljava/lang/String;)V
	als_1_end:

	return
.end method

